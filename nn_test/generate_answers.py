import numpy as np

# Demo numpy reshaping
print(np.reshape(np.array([1, 0, 0, 1]), [2, 2]))
print(np.array([1, 2]).__matmul__(np.reshape(np.array([1, 0, 0, 1]), [2, 2], order="F")))

f = np.genfromtxt("VDMEM.txt", dtype=np.int32)

# Do fully connected layer calculation
input_vector = f[:256]
weight_matrix = np.reshape(f[256:], [256,256], order="F")

answer = input_vector.__matmul__(weight_matrix)
print(answer.shape, answer.dtype)
print(answer)

print("first")
print(f[256::256])
print(np.array([79]*256).__mul__(f[256::256]))

print(f[:256].__matmul__(f[256:512]))
print(f[:256].__matmul__(f[512:768]))
print(f[:256].__matmul__(f[768:1024]))

# VDMEMOP answer:
# - identity matrix VDMEM: answer should be numbers 1~256 starting from line 65793 to line 66048
# - random matrix VDMEM: answer should be the following 256 big numbers starting from line 65793 to line 66048
"""
757767
766252
793348
748283
767130
771122
794847
798844
765549
744121
754216
760030
778060
786769
798208
753744
764469
763848
750769
789095
781234
772604
768777
798126
768466
781465
782825
832262
763287
751222
737901
774732
761290
803094
785044
733353
752860
763725
772906
752340
756050
727370
769991
727116
817586
779594
761551
786091
724699
778935
782003
798698
798998
811361
771064
785227
761124
762219
761009
784135
773081
756788
719495
757377
795307
825383
757041
805127
733627
745000
816949
791456
769700
737192
837524
746517
783809
740660
758862
746960
769450
756658
772579
786061
774105
778353
786939
750538
764734
756826
803336
751443
760935
715453
771228
789526
770153
763711
768439
781947
759674
762094
733922
758785
747445
777207
763923
818183
749804
769272
723743
767135
772692
782228
760058
777095
751963
773648
782304
729004
760917
804362
767511
730678
741249
765394
723256
738068
811422
727886
749993
772521
732686
805845
792677
704509
778865
766930
767299
728854
708159
720576
751107
737898
750356
770996
740091
737515
762729
836880
766821
788956
713529
777919
797731
756432
745025
744297
744501
758681
777257
823155
764299
784806
758137
759423
749110
766661
766228
783513
748893
733371
704616
763482
759619
788252
797641
769329
771489
804668
796066
759532
731454
788158
784267
711466
744824
727508
802227
762196
815515
762087
776543
771893
820233
788102
739053
750182
762211
796286
772628
761995
735069
797188
791235
761734
771690
782960
731803
764994
792538
815607
762193
791459
737428
786288
762441
768478
804871
791137
778481
707303
763623
755284
744479
765133
794031
782212
745120
813718
819397
744861
760686
726480
778862
773080
800355
731944
736787
777510
758994
730963
781914
802821
778955
754358
771596
822269
762660
766462
802898
786161
752610
798474
776734
776280
"""
